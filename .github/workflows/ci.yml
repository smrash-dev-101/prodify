name: ci
on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:    # <-- lets you run it manually

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  build-test-image:
    runs-on: ubuntu-latest
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/prodify-api
    steps:
      - uses: actions/checkout@v4

      # ---- TESTS ----
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install deps (tests)
        working-directory: services/api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest
      - name: Run tests
        working-directory: services/api
        run: pytest -q

      # ---- DOCKER BUILD (LOAD LOCALLY so Trivy can scan) ----
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (amd64) and load locally
        uses: docker/build-push-action@v5
        with:
          context: ./services/api
          platforms: linux/amd64
          push: false
          load: true                  # <-- key piece
          tags: ${{ env.IMAGE }}:sha-${{ github.sha }}

      # ---- SECURITY & SBOM ----
      - name: Trivy scan (local image)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: image
          image-ref: ${{ env.IMAGE }}:sha-${{ github.sha }}
          format: table
          exit-code: '0'
          vuln-type: 'os,library'
          ignore-unfixed: true

      - name: SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE }}:sha-${{ github.sha }}
          artifact-name: sbom-${{ github.sha }}.spdx.json

      # ---- PUSH & SIGN ----
      - name: Build & push (amd64)
        uses: docker/build-push-action@v5
        with:
          context: ./services/api
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE }}:sha-${{ github.sha }}
            ${{ env.IMAGE }}:latest

      - name: Install cosign
        uses: sigstore/cosign-installer@v3
      - name: Sign image (keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: cosign sign --yes $IMAGE:sha-${GITHUB_SHA}
